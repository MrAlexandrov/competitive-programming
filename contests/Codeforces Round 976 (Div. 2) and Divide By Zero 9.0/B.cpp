#include <bits/stdc++.h>
using namespace std;


int main() {
    std::ios_base::sync_with_stdio(false); 
    std::cin.tie(nullptr); 
    std::cout.tie(nullptr);
    int t;
    cin >> t;
    while (t--) {
        long long k;
        cin >> k;

        long long l = 0, r = 2e9 + 7;
        while (r - l > 1LL) {
            long long m = (l + r) / 2;
            if (m * (m + 1) < k) {
                l = m;
            } else {
                r = m;
            }
        }
        assert(r * (r + 1) >= k);
        if (l != 0) {
            assert(l * (l + 1) < k);
        }
        cout << r + k << '\n';
        continue;

        // long long answer = 1;




        for (int n = 1; n <= 100; ++n) {
            vector<bool> a(n + 1, true);
            for (int i = 1; i <= n; ++i) {
                // for (int j = i; j <= n; j += i) {
                for (int j = 1; j <= n; ++j) {
                    if (j % i == 0) a[j] = !a[j];
                }
            }
            for (int i = 1; i <= n; ++i) {
                cout << a[i] << ' ';
            }
            cout << endl;
        }
    }
    return 0;
}

/**

2
4
6
8

2      1 + k
6      2 + k
12     3 + k
20     4 + k


2       = 1 * 2
6       = 2 * 3
12      = 3 * 4
20      = 4 * 5
30      = 5 * 6

1       = 1 * 2 / 2
3       = 2 * 3 / 2
6       = 3 * 4 / 2
10      


0 
0 1 
0 1 1 
0 1 1 0 
0 1 1 0 1 
0 1 1 0 1 1 
0 1 1 0 1 1 1 
0 1 1 0 1 1 1 1 
0 1 1 0 1 1 1 1 0 
0 1 1 0 1 1 1 1 0 1 
0 1 1 0 1 1 1 1 0 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 
0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 

**/